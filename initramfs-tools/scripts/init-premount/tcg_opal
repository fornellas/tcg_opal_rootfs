#!/bin/sh
PREREQ=""

prereqs()
{
	echo "$PREREQ"
}

case $1 in
prereqs)
	prereqs
	exit 0
	;;
esac

. /scripts/functions

SEDUTIL="sedutil-cli.badicsalex"

list_block_devices()
{
	wait_for_udev 10
	for glob in 'sd[a-z]' 'nvme[0-9]n[0-9]' 'nvme[0-9][0-9]n[0-9][0-9]' ; do
		/usr/bin/find /dev/ -name "$glob"
	done
	if [ $? != 0 ] ; then
		panic "Unable to list block devices"
	fi
}

opal_drive_locked_status()
{
	"$SEDUTIL" --query "$1" 2> /dev/null | gawk 'match($0, /Locked = (Y|N)/, cap) { print cap[1] }'
}

is_locked_opal_drive()
{
	if [ "$(opal_drive_locked_status $1)" = "Y" ]; then
		return 0
	fi
	return 1
}

get_block_device_info()
{
	"$SEDUTIL" --query "$1" | gawk '/^\//{print;exit}'
	if [ $? != 0 ] ; then
		panic "Unable to query $1"
	fi
}

opal_unlock_all_ranges()
{
	local device
        local pass
	local tmpfile
	local list_out
	device="$1"
	pass="$2"
	tmpfile=/tmp/sedutil-listlockingranges
	# Collect a list of WLocked values for each locking range
	"$SEDUTIL" --listLockingRanges "$pass" "$device" | gawk 'match($0, /WLocked = (Y|N)/, cap) { print cap[1] }' > $tmpfile
	list_out="$(cat $tmpfile)"
	if [ -z "$list_out" ]; then
		# file is empty means sedutil failed
		rm -f $tmpfile
		return 1
	fi
	
	local current_range
	local failure
	local wlocked
	current_range=0
	failure=""
	# unlock each range that has "WLocked = Y"
	while read wlocked; do
		if [ "$wlocked" = "Y" ]; then
			if ! "$SEDUTIL" --setlockingrange $current_range rw "$pass" "$device" > /dev/null 2> /dev/null; then
				failure="unexpected: unlocking failed for $device"
				break
			fi
			if ! "$SEDUTIL" --prepareForS3Sleep $current_range "$pass" "$device"; then
				failure="unexpected: prepare for S3 failed for $device"
				break
			fi
		fi
		current_range=$((current_range + 1))
	done < $tmpfile
	rm -f $tmpfile
	if [ -n "$failure"  ] ; then
		panic "$failure"
	fi
}

opal_unlock()
{
	local device
	device="$1"
	while true ; do
		if [ -z "$pass" ]; then
			# Only ask if "pass" is not set. This allows the
			# user to define the same password for multiple drives
			# and only be prompted once.
			echo
			/usr/bin/stty -echo
			echo -n "Password for $2 ($device): "
			read pass
			/usr/bin/stty echo
			echo
		fi
		if ! opal_unlock_all_ranges "$device" "$pass"; then
			pass=""
			log_failure_msg "Failed to unlock!"
			continue
		fi
		log_success_msg "Unlocked!"
		break
	done
}

log_begin_msg "OPAL Drives Unlock"
for block_device in $(list_block_devices) ; do
	if ! is_locked_opal_drive "$block_device" ; then
		continue
	fi
	opal_unlock "$block_device" "$(get_block_device_info $block_device)"
done
log_end_msg

/usr/sbin/partprobe
